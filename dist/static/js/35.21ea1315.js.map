{"version":3,"sources":["webpack:///./src/pages/live-mager/playBack/index.vue?e292","webpack:///src/pages/live-mager/playBack/index.vue","webpack:///./src/pages/live-mager/playBack/index.vue?32ed","webpack:///./src/pages/live-mager/playBack/index.vue","webpack:///./src/pages/live-mager/css/live.scss?be40","webpack:///./src/pages/live-mager/playBack/index.vue?6159","webpack:///./src/pages/live-mager/playBack/index.vue?a809"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","border","_v","top","margin-top","on","click","addVideoClickShow","attrs","name","prePlayShow","$event","playBack","outLineLink","width","height","domProps","innerHTML","_s","recordId","playMsg","id","_e","class","active","navIdx","changeNav","tip","playBackList","length","data","label","scopedSlots","_u","key","fn","scope","title","row","prop","_f","duration","generateTime","status","type","size","stopPropagation","resetMakePlayBack","$index","replayId","cancelPlayBack","playBackSetting","color","handlerMore","disabled","total","pageSize","currentPage","page","changePage","directives","rawName","value","renameShow","expression","header","cancelText","confirmText","handleClick","renameHandleClick","placeholder","error-tips","newTitleError","newTitle","update:value","addVideoShow","addVideohandleClick","model","playBackMode","callback","$$v","accept","fileSize","errorMsg","recordIdError","sdk","sdkParam","handleVideoClick","error","errorUploadVideo","success","uploadVideoSuccess","outLineError","max-length","playBackShow","savePlayBackConfig","defaultImg","uploadImgErrorMsg","uploadError","uploadImgSuccess","outLineMode","align","editable","format","value-format","outLineTime","$set","_withStripped","_outLineMode","live_mager_playBackvue_type_script_lang_js_","components","VeUploadImage","ve_upload_image","veMsgTips","ve_msg_tips","VeUploadVideo","ve_upload_video","VePagination","ve_pagination","selectRowIdx","sign","signed_at","app_id","fileName","sdkPlayParam","accountId","token","linkVideo","tempPlayBackCover","isSwitch","playBackCover","isLoadingList","options","activityId","uploadErrorMsg","loadingTimeout","filters","formatTime","padStart","computed","extends_default","Object","vuex_esm","accountInfo","state","$imgHost","watch","newVal","playBack.outLineTime","Date","getTime","created","$route","params","initPage","eventBus","$emit","url","methods","setAccountInfo","mutation_types","_this","$get","playback_service","GET_PLAYBACK","then","res","offlineType","offlineTime","cover","queryPlayBackList","GET_PAAS_SDK_INFO","$nextTick","signedAt","appId","initMsgServe","_this2","asyncToGenerator_default","regenerator_default","a","mark","_callee","roomInfo","wrap","_context","prev","next","GET_REG_SDK_INFO","thirdUserId","businessUserId","channel","channelRoom","sent","ChatService","OBJ","init","channelId","regHandler","chat_config","download","msg","console","log","downLoadVideo","stop","_this3","$config","handlers","GET_PLAYBACK_LIST","list","catch","idx","_this4","$post","POST_CANCEL_PLAYBACK_CONFIG","_this5","POST_REMAKE_PLAYBACK","$toast","content","position","link","video","$playVideo","delPlayBack","rId","_this6","downLoadFile","setTimeout","clearTimeout","_this7","POST_DOWNLOAD_VIDEO","downloadUrl","dl","document","createElement","href","e","$messageBox","autoClose","_this8","action","preViewOutLine","POST_CREATE_PLAYBACK","replace","location","protocol","updataTitle","_this9","POST_SAVE_PLAYBACK_CONFIG","_this10","POST_RETITLE_PLAYBACK","_this11","delId","POST_DELETE_PLAYBACK_BY_ID","test","uploadVideo","getElementById","file","_this12","component","componentNormalizer","__file","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_node_modules_sass_loader_lib_loader_js_live_scss_vue_type_style_index_0_id_1cb7a21a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_node_modules_sass_loader_lib_loader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_1_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_node_modules_sass_loader_lib_loader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_2_id_1cb7a21a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/35.21ea1315.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"live-mager play-back\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"live-title\", staticStyle: { border: \"none\" } },\n        [\n          _c(\"span\", { staticClass: \"title\" }, [_vm._v(\"活动回放\")]),\n          _vm._v(\" \"),\n          _c(\"com-back\", { staticStyle: { top: \"42px\" } }),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"primary-button fr add-btn\",\n              staticStyle: { \"margin-top\": \"17px\" },\n              on: { click: _vm.addVideoClickShow }\n            },\n            [_vm._v(\"添加视频\\n    \")]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"transition\", { attrs: { name: \"fade\" } }, [\n        _vm.prePlayShow\n          ? _c(\"div\", { staticClass: \"video-modal-box\" }, [\n              _c(\"div\", {\n                staticClass: \"video-modal\",\n                on: {\n                  click: function($event) {\n                    _vm.prePlayShow = false\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"video-content\" }, [\n                _vm.playBack.outLineLink\n                  ? _c(\"div\", { staticClass: \"iframe-box\" }, [\n                      _c(\"div\", {\n                        staticStyle: { width: \"100%\", height: \"100%\" },\n                        domProps: {\n                          innerHTML: _vm._s(_vm.playBack.outLineLink)\n                        }\n                      })\n                    ])\n                  : !_vm.recordId || _vm.playMsg\n                    ? _c(\"span\", [_vm._v(_vm._s(_vm.playMsg || \"暂无视频\"))])\n                    : _c(\"div\", {\n                        staticStyle: { width: \"100%\", height: \"100%\" },\n                        attrs: { id: \"myVideo\" }\n                      })\n              ])\n            ])\n          : _vm._e()\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"list-box\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"list-header\" },\n          [\n            _c(\"nav\", { staticClass: \"table-nav\" }, [\n              _c(\n                \"span\",\n                {\n                  class: { active: _vm.navIdx === 0 },\n                  on: {\n                    click: function($event) {\n                      _vm.changeNav(0)\n                    }\n                  }\n                },\n                [_vm._v(\"回放片段\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"span\",\n                {\n                  class: { active: _vm.navIdx === 1 },\n                  on: {\n                    click: function($event) {\n                      _vm.changeNav(1)\n                    }\n                  }\n                },\n                [_vm._v(\"视频\")]\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"ve-msg-tips\", {\n              attrs: { tip: \"您可以根据需要从回放片段或视频中设置默认回放\" }\n            })\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"table-list-box\" },\n          [\n            _vm.playBackList.length\n              ? [\n                  _c(\n                    \"el-table\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      attrs: { data: _vm.playBackList }\n                    },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { label: \"片段名\", width: \"250\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _c(\n                                  \"span\",\n                                  {\n                                    staticClass: \"overflow-hide\",\n                                    attrs: { title: scope.row.title }\n                                  },\n                                  [_vm._v(_vm._s(scope.row.title))]\n                                )\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: { prop: \"duration\", label: \"时长\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _vm._v(\n                                  \"\\n              \" +\n                                    _vm._s(\n                                      _vm._f(\"formatTime\")(scope.row.duration)\n                                    ) +\n                                    \"\\n            \"\n                                )\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: { label: \"生成时间\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _vm._v(\n                                  \"\\n              \" +\n                                    _vm._s(\n                                      _vm._f(\"isEmpty\")(scope.row.generateTime)\n                                    ) +\n                                    \"\\n            \"\n                                )\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: { label: \"回放状态\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                scope.row.status == \"SUCCESS\"\n                                  ? _c(\n                                      \"span\",\n                                      { staticClass: \"status-success\" },\n                                      [_vm._v(\"生成成功\")]\n                                    )\n                                  : scope.row.status == \"FAIL\"\n                                    ? _c(\n                                        \"span\",\n                                        { staticClass: \"status-error\" },\n                                        [_vm._v(\"生成失败\")]\n                                      )\n                                    : _c(\n                                        \"span\",\n                                        { staticClass: \"status-default\" },\n                                        [_vm._v(\"生成中\")]\n                                      )\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: { label: \"操作\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                scope.row.status == \"FAIL\"\n                                  ? _c(\n                                      \"div\",\n                                      [\n                                        _c(\n                                          \"el-button\",\n                                          {\n                                            attrs: {\n                                              type: \"text\",\n                                              size: \"small\"\n                                            },\n                                            on: {\n                                              click: function($event) {\n                                                $event.stopPropagation()\n                                                _vm.resetMakePlayBack(\n                                                  scope.$index\n                                                )\n                                              }\n                                            }\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"重新生成回放\\n                \"\n                                            )\n                                          ]\n                                        )\n                                      ],\n                                      1\n                                    )\n                                  : scope.row.status !== \"PROCESS\"\n                                    ? _c(\n                                        \"div\",\n                                        [\n                                          _vm.playBackList[scope.$index]\n                                            .replayId == _vm.playBack.replayId\n                                            ? _c(\n                                                \"el-button\",\n                                                {\n                                                  attrs: {\n                                                    type: \"text\",\n                                                    size: \"small\"\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      $event.stopPropagation()\n                                                      _vm.cancelPlayBack(\n                                                        scope.$index\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                [\n                                                  _vm._v(\n                                                    \"取消默认回放\\n                \"\n                                                  )\n                                                ]\n                                              )\n                                            : _c(\n                                                \"el-button\",\n                                                {\n                                                  attrs: {\n                                                    type: \"text\",\n                                                    size: \"small\"\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      $event.stopPropagation()\n                                                      _vm.playBackSetting(\n                                                        scope.$index\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                [\n                                                  _vm._v(\n                                                    \"设为默认回放\\n                \"\n                                                  )\n                                                ]\n                                              ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"el-button\",\n                                            {\n                                              staticStyle: { color: \"blue\" },\n                                              attrs: {\n                                                type: \"text\",\n                                                size: \"small\"\n                                              },\n                                              on: {\n                                                click: function($event) {\n                                                  $event.stopPropagation()\n                                                  _vm.handlerMore(\n                                                    scope.$index,\n                                                    1\n                                                  )\n                                                }\n                                              }\n                                            },\n                                            [_vm._v(\"预览\\n                \")]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\"div\", { staticClass: \"more\" }, [\n                                            _c(\"span\", [_vm._v(\"更多\")]),\n                                            _vm._v(\" \"),\n                                            _c(\n                                              \"div\",\n                                              { staticClass: \"more-menu\" },\n                                              [\n                                                _c(\n                                                  \"span\",\n                                                  {\n                                                    class: {\n                                                      disabled:\n                                                        _vm.playBackList[\n                                                          scope.$index\n                                                        ].type == \"LINK\"\n                                                    },\n                                                    on: {\n                                                      click: function($event) {\n                                                        _vm.handlerMore(\n                                                          scope.$index,\n                                                          0\n                                                        )\n                                                      }\n                                                    }\n                                                  },\n                                                  [_vm._v(\"下载\")]\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"span\",\n                                                  {\n                                                    on: {\n                                                      click: function($event) {\n                                                        _vm.handlerMore(\n                                                          scope.$index,\n                                                          2\n                                                        )\n                                                      }\n                                                    }\n                                                  },\n                                                  [_vm._v(\"重命名\")]\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"span\",\n                                                  {\n                                                    on: {\n                                                      click: function($event) {\n                                                        _vm.handlerMore(\n                                                          scope.$index,\n                                                          3\n                                                        )\n                                                      }\n                                                    }\n                                                  },\n                                                  [_vm._v(\"删除\")]\n                                                )\n                                              ]\n                                            )\n                                          ])\n                                        ],\n                                        1\n                                      )\n                                    : _c(\"span\", [_vm._v(\"--\")])\n                              ]\n                            }\n                          }\n                        ])\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _vm.total > _vm.pageSize\n                    ? _c(\"div\", { staticClass: \"pagination-box\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"page-pagination\" },\n                          [\n                            _c(\"ve-pagination\", {\n                              attrs: {\n                                total: _vm.total,\n                                pageSize: _vm.pageSize,\n                                currentPage: _vm.page\n                              },\n                              on: { changePage: _vm.changePage }\n                            })\n                          ],\n                          1\n                        )\n                      ])\n                    : _vm._e()\n                ]\n              : [\n                  _c(\n                    \"div\",\n                    { staticClass: \"empty-box\" },\n                    [\n                      _c(\"p\", { staticClass: \"img\" }),\n                      _vm._v(\" \"),\n                      _vm.navIdx == 0\n                        ? [\n                            _c(\"p\", { staticClass: \"title\" }, [\n                              _vm._v(\"暂无回放\")\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"p\", { staticClass: \"desc\" }, [\n                              _vm._v(\"直播结束后系统会自动生成回放\")\n                            ])\n                          ]\n                        : [\n                            _c(\"p\", { staticClass: \"title\" }, [\n                              _vm._v(\"您还没有添加视频，快去添加吧\")\n                            ])\n                          ]\n                    ],\n                    2\n                  )\n                ]\n          ],\n          2\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"message-box\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.renameShow,\n              expression: \"renameShow\"\n            }\n          ],\n          attrs: {\n            header: \"\",\n            width: \"340px\",\n            cancelText: \"取消\",\n            confirmText: \"确定\"\n          },\n          on: { handleClick: _vm.renameHandleClick }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"prop-input\" },\n            [\n              _vm._v(\"\\n      输入新的视频标题：\\n      \"),\n              _c(\"com-input\", {\n                attrs: {\n                  placeholder: \"请输入标题\",\n                  \"error-tips\": _vm.newTitleError,\n                  value: _vm.newTitle\n                },\n                on: {\n                  \"update:value\": function($event) {\n                    _vm.newTitle = $event\n                  }\n                }\n              })\n            ],\n            1\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"message-box\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.addVideoShow,\n              expression: \"addVideoShow\"\n            }\n          ],\n          attrs: {\n            width: \"646px\",\n            header: \"添加视频\",\n            type: \"prompt\",\n            cancelText: \"取消\",\n            confirmText: \"确定\"\n          },\n          on: { handleClick: _vm.addVideohandleClick }\n        },\n        [\n          _c(\"div\", { staticClass: \"mager-box message-box-content\" }, [\n            _c(\"div\", { staticClass: \"from-box\" }, [\n              _c(\"div\", { staticClass: \"from-row\" }, [\n                _c(\"div\", { staticClass: \"from-title\" }, [\n                  _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n                  _vm._v(\"视频类型：\\n          \")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"from-content\" },\n                  [\n                    _c(\n                      \"el-radio\",\n                      {\n                        attrs: { label: \"0\" },\n                        model: {\n                          value: _vm.playBackMode,\n                          callback: function($$v) {\n                            _vm.playBackMode = $$v\n                          },\n                          expression: \"playBackMode\"\n                        }\n                      },\n                      [_vm._v(\"上传视频\\n            \")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-radio\",\n                      {\n                        attrs: { label: \"1\" },\n                        model: {\n                          value: _vm.playBackMode,\n                          callback: function($$v) {\n                            _vm.playBackMode = $$v\n                          },\n                          expression: \"playBackMode\"\n                        }\n                      },\n                      [_vm._v(\"链接引用\\n            \")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"from-msg-tip\" },\n                      [\n                        _c(\"ve-msg-tips\", {\n                          attrs: {\n                            tip:\n                              '您可以直接引用视频网站上的资源，将播放地址复制到输入框。比如爱奇艺或腾讯视频“分享”中的“通用代码”，示例如下：<iframe frameborder=\"0\" width=\"640\" height=\"498\" src=\"https://v.qq.com/iframe/player.html?vid=zxxx7hcc6iu&tiny=0&auto=0\" allowfullscreen></iframe>'\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _vm.playBackMode == 0\n                ? _c(\"div\", { staticClass: \"from-row\" }, [\n                    _c(\"div\", { staticClass: \"from-title\" }, [\n                      _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n                      _vm._v(\"上传视频：\\n          \")\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"from-content\" },\n                      [\n                        _c(\"ve-upload-video\", {\n                          attrs: {\n                            title: \"视频仅支持mp4格式，文件大小不超过4G\",\n                            accept: \"mp4\",\n                            fileSize: 4194304,\n                            errorMsg: _vm.recordIdError,\n                            sdk: _vm.sdkParam\n                          },\n                          on: {\n                            handleClick: _vm.handleVideoClick,\n                            error: _vm.errorUploadVideo,\n                            success: _vm.uploadVideoSuccess\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                : _c(\"div\", { staticClass: \"from-row input-box\" }, [\n                    _c(\"div\", { staticClass: \"from-title\" }, [\n                      _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n                      _vm._v(\"视频链接：\\n          \")\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"from-content\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"black-box\" },\n                        [\n                          _c(\"com-input\", {\n                            staticClass: \"out-line-input\",\n                            attrs: {\n                              \"error-tips\": _vm.outLineError,\n                              value: _vm.outLineLink,\n                              placeholder: \"请输入链接\"\n                            },\n                            on: {\n                              \"update:value\": function($event) {\n                                _vm.outLineLink = $event\n                              }\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ])\n                  ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"from-row input-box\" }, [\n                _c(\"div\", { staticClass: \"from-title\" }, [\n                  _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n                  _vm._v(\"视频标题：\\n          \")\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"from-content\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"black-box\" },\n                    [\n                      _c(\"com-input\", {\n                        attrs: {\n                          placeholder: \"请输入标题\",\n                          \"error-tips\": _vm.newTitleError,\n                          \"max-length\": 30,\n                          value: _vm.newTitle\n                        },\n                        on: {\n                          \"update:value\": function($event) {\n                            _vm.newTitle = $event\n                          }\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ])\n          ])\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"message-box\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.playBackShow,\n              expression: \"playBackShow\"\n            }\n          ],\n          attrs: {\n            width: \"646px\",\n            type: \"prompt\",\n            header: \"设置默认回放\",\n            cancelText: \"取消\",\n            confirmText: \"确定\"\n          },\n          on: { handleClick: _vm.savePlayBackConfig }\n        },\n        [\n          _c(\"div\", { staticClass: \"mager-box message-box-content\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"from-box\" },\n              [\n                _c(\"div\", { staticClass: \"from-row\" }, [\n                  _c(\"div\", { staticClass: \"from-title\" }, [\n                    _vm._v(\"回放封面：\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"from-content\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"from-content\" },\n                      [\n                        _c(\"ve-upload-image\", {\n                          attrs: {\n                            title:\n                              \"图片支持jpg、png、bmp格式，建议比例16:9，大小不超过2M\",\n                            accept: \"png|jpg|jpeg\",\n                            defaultImg: _vm.defaultImg,\n                            fileSize: 2048,\n                            errorMsg: _vm.uploadImgErrorMsg\n                          },\n                          on: {\n                            error: _vm.uploadError,\n                            success: _vm.uploadImgSuccess\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"from-row\" }, [\n                  _c(\"div\", { staticClass: \"from-title\" }, [\n                    _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n                    _vm._v(\"下线设置：\\n          \")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"from-content\" },\n                    [\n                      _c(\n                        \"el-radio\",\n                        {\n                          attrs: { label: \"0\" },\n                          model: {\n                            value: _vm.outLineMode,\n                            callback: function($$v) {\n                              _vm.outLineMode = $$v\n                            },\n                            expression: \"outLineMode\"\n                          }\n                        },\n                        [_vm._v(\"与活动同步下线\\n            \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-radio\",\n                        {\n                          attrs: { label: \"1\" },\n                          model: {\n                            value: _vm.outLineMode,\n                            callback: function($$v) {\n                              _vm.outLineMode = $$v\n                            },\n                            expression: \"outLineMode\"\n                          }\n                        },\n                        [_vm._v(\"指定下线时间\\n            \")]\n                      )\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"transition\", { attrs: { name: \"left-right\" } }, [\n                  _vm.outLineMode == 1\n                    ? _c(\"div\", { staticClass: \"from-row input-box\" }, [\n                        _c(\"div\", { staticClass: \"from-title\" }, [\n                          _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n                          _vm._v(\"下线时间：\\n            \")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"from-content\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"black-box\" },\n                            [\n                              _c(\"el-date-picker\", {\n                                attrs: {\n                                  type: \"datetime\",\n                                  placeholder: \"选择日期时间\",\n                                  align: \"right\",\n                                  editable: false,\n                                  format: \"yyyy-MM-dd HH:mm\",\n                                  \"value-format\": \"yyyy-MM-dd HH:mm\"\n                                },\n                                model: {\n                                  value: _vm.playBack.outLineTime,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.playBack, \"outLineTime\", $$v)\n                                  },\n                                  expression: \"playBack.outLineTime\"\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _vm.outLineError\n                                ? _c(\"span\", { staticClass: \"status-error\" }, [\n                                    _vm._v(_vm._s(_vm.outLineError))\n                                  ])\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        ])\n                      ])\n                    : _vm._e()\n                ])\n              ],\n              1\n            )\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"live-mager play-back\">\n    <div class=\"live-title\"\n         style=\"border:none;\">\n      <span class=\"title\">活动回放</span>\n      <!--<span class=\"msg-tip\">所有回放的设置都在本页配置，发起页前端不再有任何回放的设置项。</span>-->\n      <com-back style='top:42px;'></com-back>\n      <button class=\"primary-button fr add-btn\"\n              style=\"margin-top: 17px;\"\n              @click=\"addVideoClickShow\" >添加视频\n      </button>\n    </div>\n    <transition name=\"fade\">\n      <div class=\"video-modal-box\"\n           v-if=\"prePlayShow\">\n        <div class=\"video-modal\"\n             @click=\"prePlayShow=false\"></div>\n        <div class=\"video-content\">\n          <div class=\"iframe-box\"\n               v-if=\"playBack.outLineLink\">\n            <div v-html=\"playBack.outLineLink\"\n                 style=\"width:100%;height: 100%;\"></div>\n          </div>\n          <span v-else-if=\"!recordId||playMsg\">{{playMsg||'暂无视频'}}</span>\n          <div id=\"myVideo\"\n               v-else\n               style=\"width:100%; height:100%;\"></div>\n        </div>\n      </div>\n    </transition>\n    <div class=\"list-box\">\n        <div class=\"list-header\">\n          <nav class=\"table-nav\">\n            <span :class=\"{active:navIdx===0}\"\n                  @click=\"changeNav(0)\">回放片段</span>\n            <span :class=\"{active:navIdx===1}\"\n                  @click=\"changeNav(1)\">视频</span>\n          </nav>\n          <ve-msg-tips tip='您可以根据需要从回放片段或视频中设置默认回放'></ve-msg-tips>\n        </div>\n        <div class=\"table-list-box\">\n          <template v-if=\"playBackList.length\">\n          <el-table :data=\"playBackList\"\n                    style=\"width: 100%\">\n            <!--<el-table-column-->\n            <!--label=\"缩略图\">-->\n            <!--<div slot-scope=\"scope\" class=\"play-back-cover\">-->\n            <!--<span class=\"play-back-default\" v-if=\"playBackList[scope.$index].replayId == playBack.replayId\">回放</span>-->\n            <!--<img class=\"play-back-img\" :src=\"playBackList[scope.$index].pic\">-->\n            <!--</div>-->\n            <!--</el-table-column>-->\n            <el-table-column label=\"片段名\"\n                            width=\"250\">\n              <template slot-scope=\"scope\">\n                <span class=\"overflow-hide\" :title=\"scope.row.title\">{{scope.row.title}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"duration\"\n                            label=\"时长\">\n              <template slot-scope=\"scope\">\n                {{scope.row.duration | formatTime}}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"生成时间\">\n              <template slot-scope=\"scope\">\n                {{scope.row.generateTime | isEmpty}}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"回放状态\">\n              <template slot-scope=\"scope\">\n                <span class=\"status-success\"\n                      v-if=\"scope.row.status=='SUCCESS'\">生成成功</span>\n                <span class=\"status-error\"\n                      v-else-if=\"scope.row.status=='FAIL'\">生成失败</span>\n                <span class=\"status-default\"\n                      v-else>生成中</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <div v-if=\"scope.row.status=='FAIL'\">\n                  <el-button type=\"text\"\n                            size=\"small\"\n                            @click.stop=\"resetMakePlayBack(scope.$index)\">重新生成回放\n                  </el-button>\n                </div>\n                <div v-else-if=\"scope.row.status!=='PROCESS'\">\n                  <el-button type=\"text\"\n                            size=\"small\"\n                            v-if=\"playBackList[scope.$index].replayId == playBack.replayId\"\n                            @click.stop=\"cancelPlayBack(scope.$index)\">取消默认回放\n                  </el-button>\n                  <el-button type=\"text\"\n                            size=\"small\"\n                            v-else\n                            @click.stop=\"playBackSetting(scope.$index)\">设为默认回放\n                  </el-button>\n                  <el-button type=\"text\"\n                            size=\"small\"\n                            style=\"color: blue;\"\n                            @click.stop=\"handlerMore(scope.$index, 1)\">预览\n                  </el-button>\n                  <div class=\"more\">\n                    <span>更多</span>\n                    <div class=\"more-menu\">\n                      <span @click=\"handlerMore(scope.$index, 0)\"\n                            :class=\"{disabled:playBackList[scope.$index].type=='LINK'}\">下载</span>\n                      <!--<span @click=\"handlerMore(scope.$index, 1)\">预览</span>-->\n                      <span @click=\"handlerMore(scope.$index, 2)\">重命名</span>\n                      <span @click=\"handlerMore(scope.$index, 3)\">删除</span>\n                    </div>\n                  </div>\n                </div>\n                <span v-else>--</span>\n              </template>\n            </el-table-column>\n          </el-table>\n          <div class=\"pagination-box\"\n              v-if=\"total>pageSize\">\n            <div class=\"page-pagination\">\n              <ve-pagination :total=\"total\"\n                            :pageSize=\"pageSize\"\n                            :currentPage=\"page\"\n                            @changePage=\"changePage\"/>\n            </div>\n          </div>\n          </template>\n          <template v-else>\n            <div class=\"empty-box\">\n              <p class=\"img\"></p>\n              <template v-if=\"navIdx == 0\">\n                <p class='title'>暂无回放</p>\n                <p class='desc'>直播结束后系统会自动生成回放</p>\n              </template>\n              <template v-else>\n                <p class='title'>您还没有添加视频，快去添加吧</p>\n                <!-- <el-button class='primary-button' @click=\"addVideoClickShow\">添加视频</el-button> -->\n              </template>\n            </div>\n          </template>\n        </div>\n    </div>\n    <!-- 重命名 -->\n    <message-box v-show=\"renameShow\"\n                 header=\"\"\n                 width=\"340px\"\n                 cancelText=\"取消\"\n                 confirmText='确定'\n                 @handleClick=\"renameHandleClick\">\n      <div class=\"prop-input\">\n        输入新的视频标题：\n        <com-input placeholder=\"请输入标题\"\n                   :error-tips=\"newTitleError\"\n                   :value.sync=\"newTitle\"/>\n      </div>\n    </message-box>\n    <!-- 添加视频 -->\n    <message-box v-show=\"addVideoShow\"\n                 width=\"646px\"\n                 header=\"添加视频\"\n                 type=\"prompt\"\n                 cancelText=\"取消\"\n                 confirmText='确定'\n                 @handleClick=\"addVideohandleClick\">\n      <div class=\"mager-box message-box-content\">\n        <div class=\"from-box\">\n          <div class=\"from-row\">\n            <div class=\"from-title\">\n              <i class=\"star\">*</i>视频类型：\n            </div>\n            <div class=\"from-content\">\n              <el-radio v-model=\"playBackMode\"\n                        label=\"0\">上传视频\n              </el-radio>\n              <el-radio v-model=\"playBackMode\"\n                        label=\"1\">链接引用\n              </el-radio>\n              <div class=\"from-msg-tip\">\n                <ve-msg-tips\n                  tip='您可以直接引用视频网站上的资源，将播放地址复制到输入框。比如爱奇艺或腾讯视频“分享”中的“通用代码”，示例如下：<iframe frameborder=\"0\" width=\"640\" height=\"498\" src=\"https://v.qq.com/iframe/player.html?vid=zxxx7hcc6iu&tiny=0&auto=0\" allowfullscreen></iframe>'></ve-msg-tips>\n              </div>\n            </div>\n          </div>\n          <div class=\"from-row\"\n               v-if=\"playBackMode==0\">\n            <div class=\"from-title\">\n              <i class=\"star\">*</i>上传视频：\n            </div>\n            <div class=\"from-content\">\n              <ve-upload-video title=\"视频仅支持mp4格式，文件大小不超过4G\"\n                               accept=\"mp4\"\n                               :fileSize=\"4194304\"\n                               :errorMsg=\"recordIdError\"\n                               :sdk=\"sdkParam\"\n                               @handleClick=\"handleVideoClick\"\n                               @error=\"errorUploadVideo\"\n                               @success=\"uploadVideoSuccess\"></ve-upload-video>\n            </div>\n          </div>\n          <div class=\"from-row input-box\"\n               v-else>\n            <div class=\"from-title\">\n              <i class=\"star\">*</i>视频链接：\n            </div>\n            <div class=\"from-content\">\n              <div class=\"black-box\">\n                <com-input class=\"out-line-input\"\n                           :error-tips=\"outLineError\"\n                           :value.sync=\"outLineLink\"\n                           placeholder=\"请输入链接\"></com-input>\n              </div>\n            </div>\n          </div>\n          <div class=\"from-row input-box\">\n            <div class=\"from-title\">\n              <i class=\"star\">*</i>视频标题：\n            </div>\n            <div class=\"from-content\">\n              <div class=\"black-box\">\n                <com-input placeholder=\"请输入标题\"\n                           :error-tips=\"newTitleError\"\n                           :max-length=\"30\"\n                           :value.sync=\"newTitle\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </message-box>\n    <!-- 回放设置 -->\n    <message-box v-show=\"playBackShow\"\n                 width=\"646px\"\n                 type=\"prompt\"\n                 header=\"设置默认回放\"\n                 cancelText=\"取消\"\n                 confirmText='确定'\n                 @handleClick=\"savePlayBackConfig\">\n      <div class=\"mager-box message-box-content\">\n        <div class=\"from-box\">\n          <div class=\"from-row\">\n            <div class=\"from-title\">回放封面：</div>\n            <div class=\"from-content\">\n              <div class=\"from-content\">\n                <ve-upload-image title=\"图片支持jpg、png、bmp格式，建议比例16:9，大小不超过2M\"\n                                 accept=\"png|jpg|jpeg\"\n                                 :defaultImg=\"defaultImg\"\n                                 :fileSize=\"2048\"\n                                 :errorMsg=\"uploadImgErrorMsg\"\n                                 @error=\"uploadError\"\n                                 @success=\"uploadImgSuccess\"></ve-upload-image>\n              </div>\n            </div>\n          </div>\n          <div class=\"from-row\">\n            <div class=\"from-title\">\n              <i class=\"star\">*</i>下线设置：\n            </div>\n            <div class=\"from-content\">\n              <el-radio v-model=\"outLineMode\"\n                        label=\"0\">与活动同步下线\n              </el-radio>\n              <el-radio v-model=\"outLineMode\"\n                        label=\"1\">指定下线时间\n              </el-radio>\n            </div>\n          </div>\n          <transition name=\"left-right\">\n            <div class=\"from-row input-box\"\n                 v-if=\"outLineMode==1\">\n              <div class=\"from-title\">\n                <i class=\"star\">*</i>下线时间：\n              </div>\n              <div class=\"from-content\">\n                <div class=\"black-box\">\n                  <el-date-picker v-model=\"playBack.outLineTime\"\n                                  type=\"datetime\"\n                                  placeholder=\"选择日期时间\"\n                                  align=\"right\"\n                                  :editable=\"false\"\n                                  format=\"yyyy-MM-dd HH:mm\"\n                                  value-format=\"yyyy-MM-dd HH:mm\">\n                  </el-date-picker>\n                  <span class=\"status-error\"\n                        v-if=\"outLineError\">{{outLineError}}</span>\n                </div>\n              </div>\n            </div>\n          </transition>\n        </div>\n      </div>\n    </message-box>\n  </div>\n</template>\n\n<script>\nimport VeUploadImage from 'src/components/ve-upload-image'\nimport VeUploadVideo from 'src/components/ve-upload-video'\nimport VePagination from 'src/components/ve-pagination'\nimport veMsgTips from 'src/components/ve-msg-tips'\nimport playbackService from 'src/api/playback-service'\nimport ChatConfig from 'src/api/chat-config'\nimport ChatService from 'components/chat/ChatService.js'\nimport { mapMutations, mapState } from 'vuex'\nimport * as types from 'src/store/mutation-types'\nimport EventBus from 'src/utils/eventBus'\n\nconst outLineMode = {\n  'FOREVER': 'NEVER',\n  'TIMING': 'PLAN'\n}\nexport default {\n  name: 'play-back',\n  components: { VeUploadImage, veMsgTips, VeUploadVideo, VePagination },\n  data () {\n    return {\n      navIdx: 0,\n      addVideoShow: false,\n      renameShow: false,\n      playBackShow: false,\n      newTitle: '',\n      selectRowIdx: 0,\n      sdkParam: { // sdk上传插件初始化参数\n        sign: '',\n        signed_at: '',\n        app_id: '',\n        fileName: '',\n        fileSize: ''\n      },\n      sdkPlayParam: { // sdk播放器初始化参数\n        app_id: '',\n        accountId: '',\n        token: '',\n        recordId: '', // 回放视频id\n        linkVideo: '' // 外链视频\n      },\n      tempPlayBackCover: '',\n      playBack: {\n        isSwitch: true,\n        replayId: '',\n        outLineMode: '',\n        outLineTime: '',\n        playBackCover: '',\n        recordId: '',\n        outLineLink: ''\n      },\n      outLineError: '',\n      recordIdError: '',\n      newTitleError: '',\n      playBackList: [],\n      isLoadingList: false,\n      options: [\n        { value: '0', label: '默认回放' },\n        { value: '1', label: '上传视频' },\n        { value: '2', label: '外部链接' }\n      ],\n      recordId: '',\n      activityId: '',\n      page: 1,\n      pageSize: 25,\n      total: 0,\n      outLineLink: '',\n      outLineMode: '0',\n      playBackMode: '0',\n      uploadErrorMsg: '',\n      uploadImgErrorMsg: '',\n      playMsg: '',\n      loadingTimeout: 0,\n      prePlayShow: false\n    }\n  },\n  filters: {\n    formatTime: function (value) {\n      if (value) {\n        let h = ((value / 3600 >> 0) + '').padStart(2, 0)\n        let m = ((value / 60 % 60 >> 0) + '').padStart(2, 0)\n        let s = ((value % 60 >> 0) + '').padStart(2, 0)\n        return `${h}:${m}:${s}`\n      }\n      return value || '--'\n    }\n  },\n  computed: {\n    ...mapState('login', {\n      accountInfo: state => state.accountInfo\n    }),\n    defaultImg () {\n      if (!this.tempPlayBackCover) {\n        return ''\n      }\n      return `${this.$imgHost}/${this.tempPlayBackCover}`\n    }\n  },\n  watch: {\n    outLineMode (newVal) {\n      if (newVal !== '1') { // 永不下线\n        this.playBack.outLineMode = outLineMode.FOREVER\n        this.playBack.outLineTime = ''\n      } else { // 定时下线\n        this.playBack.outLineMode = outLineMode.TIMING\n      }\n    },\n    'playBack.outLineTime' (newVal) {\n      if (newVal) {\n        this.outLineError = newVal ? '' : this.outLineError\n        if ((new Date(newVal)).getTime() <= (new Date().getTime())) {\n          this.outLineError = '只能选择当前时间之后的时间'\n        } else {\n          this.outLineError = ''\n        }\n      } else {\n        this.outLineError = ''\n      }\n    },\n    outLineLink (newVal) {\n      this.outLineError = newVal ? '' : this.outLineError\n    },\n    recordId (newVal) {\n      this.recordIdError = newVal ? '' : this.recordIdError\n    },\n    newTitle (newVal) {\n      this.newTitleError = newVal ? '' : this.newTitleError\n    }\n  },\n  created () {\n    this.activityId = this.$route.params.id\n    this.initPage()\n    EventBus.$emit('breads', [{\n      title: '活动管理'\n    }, {\n      title: '活动列表',\n      url: '/liveMager/list'\n    }, {\n      title: '活动详情',\n      url: `/liveMager/detail/${this.$route.params.id}`\n    }, {\n      title: '活动回放',\n      url: `/liveMager/playBack/${this.$route.params.id}`\n    }])\n  },\n  methods: {\n    ...mapMutations('login', {\n      setAccountInfo: types.ACCOUNT_INFO\n    }),\n    initPage () {\n      this.$get(playbackService.GET_PLAYBACK, {\n        activityId: this.activityId\n      }).then((res) => {\n        this.playBack = {\n          replayId: res.data.replayId,\n          outLineMode: res.data.offlineType,\n          outLineTime: res.data.offlineTime,\n          playBackCover: res.data.cover,\n          outLineLink: ''\n        }\n        this.tempPlayBackCover = res.data.cover\n        this.outLineMode = res.data.offlineType === outLineMode.TIMING ? '1' : '0'\n      }).then(() => {\n        this.queryPlayBackList()\n        /* 获取pass信息 */\n        this.$get(playbackService.GET_PAAS_SDK_INFO).then((res) => {\n          // this.vhallParams = res.data\n          /* $nextTick保证dom被渲染之后进行paas插件初始化 */\n          this.$nextTick(() => {\n            // 初始化pass上传插件\n            // this.initVhallUpload()\n            this.sdkParam.sign = res.data.sign\n            this.sdkParam.signed_at = res.data.signedAt\n            this.sdkParam.app_id = res.data.appId\n            this.sdkPlayParam = {\n              app_id: res.data.appId,\n              accountId: res.data.accountId,\n              token: res.data.token,\n              recordId: '',\n              linkVideo: ''\n            }\n          })\n        })\n      })\n      this.initMsgServe()\n    },\n    async initMsgServe () {\n      // const loginInfo = JSON.parse(sessionStorage.getItem('accountInfo'))\n      const roomInfo = await this.$get(playbackService.GET_REG_SDK_INFO, {\n        thirdUserId: this.accountInfo.businessUserId,\n        channel: this.accountInfo.channelRoom\n      }).then(res => {\n        return res.data\n      })\n      ChatService.OBJ.init({\n        accountId: roomInfo.accountId,\n        token: roomInfo.token,\n        appId: roomInfo.appId,\n        channelId: roomInfo.channelRoom\n      })\n      /* 监听下载消息 */\n      ChatService.OBJ.regHandler(ChatConfig.download, (msg) => {\n        console.log('---------下载消息---------')\n        console.log(msg)\n        this.downLoadVideo()\n      })\n    },\n    changePage (currentPage) {\n      this.page = currentPage\n      this.queryPlayBackList()\n    },\n    queryPlayBackList () {\n      if (this.isLoadingList) return\n      this.isLoadingList = true\n      this.$config({ handlers: true }).$get(playbackService.GET_PLAYBACK_LIST, {\n        activityId: this.activityId,\n        page: this.page,\n        pageSize: this.pageSize,\n        type: this.navIdx === 0 ? 'SLICE' : ''\n      }).then((res) => {\n        this.isLoadingList = false\n        this.playBackList = res.data.list\n        this.total = res.data.total\n      }).catch(() => {\n        this.isLoadingList = false\n      })\n    },\n    changeNav (idx) {\n      this.page = 0\n      this.total = 0\n      this.navIdx = idx\n      this.queryPlayBackList()\n    },\n    playBackSetting (idx) {\n      this.playBackShow = true\n      this.selectRowIdx = idx\n      this.tempPlayBackCover = this.playBack.playBackCover\n    },\n    /* 取消默认回放 */\n    cancelPlayBack (idx) {\n      this.$post(playbackService.POST_CANCEL_PLAYBACK_CONFIG, {\n        activityId: this.activityId\n      }).then((res) => {\n        this.playBack.replayId = ''\n      })\n    },\n    /* 重新生成回放 */\n    resetMakePlayBack (idx) {\n      this.selectRowIdx = idx\n      const playBack = this.playBackList[this.selectRowIdx]\n      this.$post(playbackService.POST_REMAKE_PLAYBACK, {\n        replayId: playBack.replayId\n      }).then((res) => {\n        playBack.status = 'PROCESS'\n        this.$toast({\n          content: '开始重新生成回放',\n          position: 'center'\n        })\n      })\n    },\n    /* 更多 */\n    handlerMore (idx, type) {\n      this.selectRowIdx = idx\n      const playBack = this.playBackList[this.selectRowIdx]\n      if (type === 0) { // 下载\n        this.downLoadVideo()\n      } else if (type === 1) { // 预览\n        if (playBack.type === 'LINK') { /* 外链 */\n          this.sdkPlayParam.outLineLink = playBack.link\n          this.sdkPlayParam.recordId = ''\n        } else {\n          this.sdkPlayParam.recordId = playBack.video\n          this.sdkPlayParam.outLineLink = ''\n        }\n        // 播放器进行播放\n        this.$playVideo({\n          ...this.sdkPlayParam\n        })\n      } else if (type === 2) { // 重命名\n        this.newTitle = playBack.title\n        this.renameShow = true\n      } else if (type === 3) { // 删除\n        this.delPlayBack()\n      }\n    },\n    /* 下载 */\n    downLoadVideo (rId) {\n      let replayId = 0\n      if (rId) {\n        replayId = rId\n      } else {\n        replayId = this.playBackList[this.selectRowIdx].replayId\n      }\n      console.log('------------downLoadVideo-------------')\n      if (rId) { // 收到下载消息直接\n        this.downLoadFile(replayId)\n      } else {\n        // 防止多次点击\n        if (this.loadingTimeout) {\n          return\n        }\n        this.loadingTimeout = setTimeout(() => {\n          clearTimeout(this.loadingTimeout)\n          this.loadingTimeout = 0\n          this.downLoadFile(replayId)\n        }, 1000)\n      }\n    },\n    downLoadFile (replayId) {\n      this.$config({ handlers: true }).$post(playbackService.POST_DOWNLOAD_VIDEO, {\n        replayId: replayId\n      }).then((res) => {\n        if (res.data.downloadUrl) {\n          let dl = document.createElement('a')\n          dl.href = res.data.downloadUrl\n          dl.click()\n        }\n      }).catch(e => {\n        let errorMsg = e.msg || '网络异常'\n        this.$messageBox({\n          header: '提示',\n          content: errorMsg,\n          autoClose: 5,\n          confirmText: '知道了'\n        })\n      })\n    },\n    addVideoClickShow () {\n      this.recordId = ''\n      this.outLineLink = ''\n      this.newTitle = ''\n      this.recordIdError = ''\n      this.outLineError = ''\n      this.newTitleError = ''\n      this.addVideoShow = true\n    },\n    /* 添加视频 */\n    addVideohandleClick (e) {\n      if (e.action === 'confirm') {\n        if (this.playBackMode === '0') {\n          this.outLineLink = ''\n          this.outLineError = ''\n          if (!this.recordId) {\n            this.recordIdError = '视频不能为空'\n            return\n          }\n        } else if (this.playBackMode === '1') {\n          this.recordId = ''\n          this.recordIdError = ''\n          if (!this.preViewOutLine()) return\n        }\n        if (!this.newTitle) {\n          this.newTitleError = '视频标题不能为空'\n          return\n        }\n        this.$post(playbackService.POST_CREATE_PLAYBACK, {\n          activityId: this.activityId,\n          title: this.newTitle,\n          type: this.playBackMode !== '0' ? 'LINK' : 'VIDEO',\n          link: this.outLineLink.replace('http://', location.protocol + '//'),\n          video: this.recordId\n        }).then((res) => {\n          this.navIdx = 1\n          this.queryPlayBackList()\n        })\n      } else {\n        this.sdkParam.fileName = ''\n        this.recordIdError = ''\n        this.outLineError = ''\n        this.newTitleError = ''\n      }\n      this.addVideoShow = false\n    },\n    /* 重命名 */\n    renameHandleClick (e) {\n      if (e.action === 'confirm') {\n        if (!this.newTitle) {\n          this.newTitleError = '标题不能为空'\n          return\n        }\n        this.updataTitle()\n      }\n      this.renameShow = false\n    },\n    /* 设置默认回放 */\n    savePlayBackConfig (e) {\n      if (e.action === 'confirm') {\n        if (this.outLineMode === '0') {\n          this.playBack.outLineTime = ''\n        } else {\n          if (!this.playBack.outLineTime) {\n            this.outLineError = '请填写下线时间'\n            return\n          } else {\n            if ((new Date(this.playBack.outLineTime)).getTime() <= (new Date().getTime())) {\n              this.outLineError = '只能选择当前时间之后的时间'\n              return\n            }\n          }\n        }\n        this.playBack.playBackCover = this.tempPlayBackCover\n        const replayId = this.playBackList[this.selectRowIdx].replayId\n        this.$post(playbackService.POST_SAVE_PLAYBACK_CONFIG, {\n          replayId: replayId,\n          cover: this.playBack.playBackCover,\n          offlineType: this.outLineMode === '0' ? 'NEVER' : 'PLAN',\n          offlineTime: this.playBack.outLineTime\n        }).then((res) => {\n          this.playBack.replayId = replayId\n        })\n      } else {\n        this.tempPlayBackCover = ''\n        this.uploadImgErrorMsg = ''\n        this.outLineError = ''\n        this.playBack.outLineTime = ''\n      }\n      this.playBackShow = false\n    },\n    updataTitle () {\n      let playBack = this.playBackList[this.selectRowIdx]\n      this.$post(playbackService.POST_RETITLE_PLAYBACK, {\n        replayId: playBack.replayId,\n        title: this.newTitle\n      }).then((res) => {\n        playBack.title = this.newTitle\n      })\n    },\n    delPlayBack () {\n      if (this.playBackList[this.selectRowIdx].replayId + '' === this.playBack.replayId + '') {\n        // 默认回放不能删除\n        this.$messageBox({\n          header: '提示',\n          content: '默认回放不能删除!',\n          autoClose: 5,\n          confirmText: '知道了'\n        })\n        return\n      }\n      this.$messageBox({\n        header: '删除此视频',\n        width: '400px',\n        content: '您是否确定要删除此视频？',\n        cancelText: '取消',\n        confirmText: '删除',\n        type: 'error',\n        handleClick: (e) => {\n          if (e.action === 'confirm') {\n            const delId = this.playBackList[this.selectRowIdx].replayId\n            this.$post(playbackService.POST_DELETE_PLAYBACK_BY_ID, {\n              replayId: delId\n            }).then((res) => {\n              this.$toast({\n                header: `提示`,\n                content: '删除成功！',\n                autoClose: 2000,\n                position: 'right-top'\n              })\n              this.queryPlayBackList()\n            })\n          }\n        }\n      })\n    },\n    preViewOutLine () {\n      if (!this.outLineLink) {\n        this.outLineError = '视频链接不能为空'\n        return false\n      }\n      const reg = /^<embed|<iframe.*(embed>|iframe>)$/\n      if (reg.test(this.outLineLink)) {\n        this.playBack.outLineLink = this.outLineLink\n      } else {\n        this.outLineError = '格式不正确'\n        return false\n      }\n      return true\n    },\n    uploadImgSuccess (data) {\n      this.tempPlayBackCover = data.name\n    },\n    uploadError (data) {\n      this.uploadImgErrorMsg = data.msg\n    },\n    uploadVideo () {\n      document.getElementById('upload').click()\n    },\n    errorUploadVideo (msg, file) {\n      this.sdkParam.fileName = file.name\n      this.recordIdError = msg\n    },\n    uploadVideoSuccess (recordId, fileName) {\n      this.recordId = recordId\n      this.sdkParam.fileName = fileName\n    },\n    /* 预览，删除触发 */\n    handleVideoClick (e) {\n      if (e.type === 'pre-view') { // 预览\n        this.$playVideo({\n          ...this.sdkPlayParam\n        })\n      } else if (e.type === 'delete') { // 删除\n        this.$messageBox({\n          header: '删除此视频',\n          width: '400px',\n          content: '您是否确定要删除此视频？',\n          cancelText: '取消',\n          confirmText: '删除',\n          type: 'error',\n          handleClick: (e) => {\n            if (e.action === 'confirm') {\n              this.recordId = ''\n              this.sdkParam.fileName = ''\n              this.sdkParam.fileSize = ''\n            }\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped src=\"../css/live.scss\">\n</style>\n<style lang=\"scss\">\n.list-box {\n  .el-table .cell {\n    overflow: visible;\n  }\n  .overflow-hide {\n    display: inline-block;\n    width: 100%;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    vertical-align: middle;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import 'assets/css/variable.scss';\n.live-title /deep/ {\n  .add-btn {\n    height: 30px;\n    line-height: 30px;\n    margin-right: 110px;\n  }\n}\n.status-default {\n  color: $color-blue;\n}\n\n.status-success {\n  color: $color-success;\n}\n\n.status-error {\n  color: $color-error;\n}\n\n.black-box {\n  height: 60px;\n  .el-date-editor {\n    width: 100%;\n  }\n  .play-content {\n    .out-line {\n      margin: 10px 0;\n      span {\n        display: inline-block;\n        margin-right: 20px;\n      }\n      .out-line-input {\n        width: 400px;\n      }\n    }\n    .play-box {\n      display: inline-block;\n      width: 474px;\n      min-height: 266.6px;\n      line-height: 266px;\n      vertical-align: top;\n      background-color: #666666;\n      color: #fff;\n      .iframe-box {\n        height: 100%;\n        width: 100%;\n      }\n    }\n  }\n}\n\n.list-box {\n  margin: 0 0 10px;\n  background-color: #fff;\n  border-radius: 4px;\n  .list-header {\n    border-bottom: solid 1px $color-bd;\n  }\n  .empty-box {\n    font-size: 14px;\n    text-align: center;\n    color: $color-font-sub;\n    min-height: 400px;\n    padding: 70px 0;\n    .img {\n      width: 150px;\n      height: 150px;\n      margin: 0 auto;\n      border-radius: 500px;\n      // background:rgba(245,245,245,1);\n      box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.02);\n      background: url('~assets/image/play_empty.png') no-repeat;\n      background-size: contain;\n    }\n    .title {\n      font-size: 14px;\n      color: $color-font;\n      padding-top: 30px;\n    }\n    .desc {\n      display: block;\n      width: 340px;\n      margin: 0 auto;\n      padding: 20px 0;\n    }\n    a {\n      display: block;\n      &:hover .el-button {\n        color: $color-font;\n      }\n    }\n    .el-button {\n      padding: 0;\n      width: 220px;\n      height: 40px;\n      text-align: center;\n      line-height: 40px;\n      margin-top: 20px;\n    }\n  }\n}\n\n.step-btns {\n  margin-left: 150px;\n}\n\n.play-back-img {\n  width: 104px;\n  height: 58px;\n}\n\n.table-nav {\n  display: inline-block;\n  margin: 0 20px;\n  font-size: 0;\n  span {\n    position: relative;\n    display: inline-block;\n    line-height: 34px;\n    text-align: center;\n    font-size: 14px;\n    padding: 10px 8px 8px 8px;\n    margin: 0 5px -1px 5px;\n    &:after {\n      display: block;\n      position: absolute;\n      content: '';\n      bottom: 0;\n      left: 0;\n      width: 0;\n      height: 2px;\n      background-color: $color-blue;\n      border-radius: 1px;\n      transition: width 0.3s;\n    }\n    &.active {\n      &:after {\n        width: 100%;\n        box-shadow: 0 0 1px $color-blue;\n      }\n    }\n    &:hover {\n      cursor: pointer;\n      color: $color-blue;\n    }\n  }\n}\n\n.more {\n  display: inline-block;\n  position: relative;\n  padding: 10px 5px;\n  font-size: 12px;\n  color: #409eff;\n  cursor: pointer;\n  text-align: center;\n  &:hover .more-menu {\n    display: block;\n  }\n  .more-menu {\n    display: none;\n    position: absolute;\n    top: 36px;\n    left: -22px;\n    width: 80px;\n    z-index: 9999999;\n    color: #666;\n    border: solid 1px #e5e5e5;\n    background-color: #fff;\n    border-radius: 4px;\n    padding: 5px 0;\n    span {\n      display: block;\n      padding: 5px 0;\n      &:hover {\n        color: #409eff;\n        background-color: #f0f1fe;\n      }\n    }\n  }\n}\n\n.prop-input {\n  text-align: left;\n  margin: 20px;\n  font-size: 14px;\n  .com-input {\n    width: 258px;\n    margin: 5px 0;\n  }\n}\n\n.message-box-content {\n  text-align: left;\n  .from-title {\n    width: 102px !important;\n  }\n  .upload-tips {\n    width: 273px !important;\n  }\n}\n\n.video-modal-box {\n  .video-modal {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 10;\n  }\n  .video-content {\n    position: absolute;\n    width: 800px;\n    height: 450px;\n    line-height: 450px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    vertical-align: top;\n    background-color: #333333;\n    color: #fff;\n    text-align: center;\n    z-index: 11;\n    .iframe-box {\n      height: 100%;\n      width: 100%;\n    }\n  }\n}\n\n.play-back /deep/ {\n  .ve-message-box__wrapper .ve-message-box {\n    overflow: visible;\n  }\n}\n</style>\n\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1cb7a21a&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"../css/live.scss?vue&type=style&index=0&id=1cb7a21a&lang=scss&scoped=true&\"\nimport style1 from \"./index.vue?vue&type=style&index=1&lang=scss&\"\nimport style2 from \"./index.vue?vue&type=style&index=2&id=1cb7a21a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1cb7a21a\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/chenqi/Desktop/Wswork/fe_management/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('1cb7a21a', component.options)\n    } else {\n      api.reload('1cb7a21a', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=1cb7a21a&scoped=true&\", function () {\n      api.rerender('1cb7a21a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/pages/live-mager/playBack/index.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!./live.scss?vue&type=style&index=0&id=1cb7a21a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!./live.scss?vue&type=style&index=0&id=1cb7a21a&lang=scss&scoped=true&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=1&lang=scss&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=1&lang=scss&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=2&id=1cb7a21a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=2&id=1cb7a21a&lang=scss&scoped=true&\""],"sourceRoot":""}