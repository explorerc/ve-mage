{"version":3,"sources":["webpack:///./src/pages/live-mager/css/live.scss?e2c5","webpack:///./src/pages/live-mager/email/edit-step-two.vue?74b3","webpack:///./src/pages/live-mager/email/edit-step-two.vue?2e8d","webpack:///./src/pages/live-mager/email/edit-step-two.vue?5cd7","webpack:///src/pages/live-mager/email/edit-step-two.vue","webpack:///./src/pages/live-mager/email/edit-step-two.vue"],"names":["_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_1_0_0_css_loader_index_js_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_live_scss_vue_type_style_index_0_id_c4130fe2_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_1_0_0_css_loader_index_js_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_edit_step_two_vue_vue_type_style_index_1_id_c4130fe2_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","render","_vm","this","_h","$createElement","_c","_self","staticClass","on","keydown","$event","canPass","click","goBack","_v","_m","attrs","placeholder","error-tips","errorMsg","title","value","email","max-length","update:value","$set","senderName","class","error","groupIds","chooseGroup","_s","totalCountStr","countBalance","tip-type","tip","_e","selectedGroupList","length","name","tag","_l","person","idx","key","id","delGroupPerson","selectedTagList","delTagPerson","from-content","planTime","label","model","sendType","callback","$$v","expression","type","align","format","value-format","webinarType","show","selectPersonShow","groupList","tagList","checkedData","okSelectList","close","searchEnter","selectedGroupListfn","selectedTagListfn","totalCount","primary-button","fr","disabled","disabledBtn","send","saveEmail","_withStripped","email_edit_step_twovue_type_script_lang_js_","components","VeMsgTips","ve_msg_tips","com_chooseGroup","data","outValue","isTimer","searchPerson","personList","selectedPersonList","selectedPersonListStr","selectedCount","content","desc","activityId","emailInviteId","emailTemplateId","tagIdStr","PC_HOST","location","protocol","selectedGroupListStr","selectedTagListStr","groupIdStr","clicked","computed","Object","vuex_esm","emailInfo","state","watch","handler","newVal","extends_default","immediate","clearError","deep","created","emailId","$route","query","expectNum","$router","go","queryEmailInfo","params","getLimit","initData","methods","storeEmailInfo","mutation_types","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","queryTagList","queryGroupList","reArrangeList","split","tagIds","stop","_this2","$get","activity_service","GET_EMAIL_INFO","then","res","change","handleSelectPerson","e","action","_this3","$toast","position","replace","$post","POST_SAVE_EMAIL_INFO","sendEmail","_this4","checkParams","POST_SEND_TIMER_EMAIL_INFO","push","POST_SAVE_SEND_EMAIL","_this5","$nextTick","immediatelySend","flag","delIdx","indexOf","isChecked","keyword","_this6","userManage_service","GET_GROUP_LIST","not_empty_field","temArray","list","forEach","item","group_id","count","user_count","_this7","GET_TAG_LIST","tag_name","tag_id","arr","str","idStr","substring","group","_this8","ele","i","_this9","GET_SEND_LIMIT","console","log","balance","beforeRouteLeave","to","from","$messageBox","header","width","cancelText","confirmText","handleClick","component","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"static/js/17.188d5fd3.js","sourcesContent":["import mod from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!./live.scss?vue&type=style&index=0&id=c4130fe2&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!./live.scss?vue&type=style&index=0&id=c4130fe2&lang=scss&scoped=true&\"","import mod from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./edit-step-two.vue?vue&type=style&index=1&id=c4130fe2&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./edit-step-two.vue?vue&type=style&index=1&id=c4130fe2&lang=scss&scoped=true&\"","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"edit-step-box\",\n      on: {\n        keydown: function($event) {\n          _vm.canPass = false\n        }\n      }\n    },\n    [\n      _c(\"header\", { staticClass: \"email-header\" }, [\n        _c(\"div\", { staticClass: \"back-btn\", on: { click: _vm.goBack } }, [\n          _c(\"i\", { staticClass: \"iconfont icon-jiantou\" })\n        ]),\n        _vm._v(\" \"),\n        _c(\"span\", [_vm._v(\"步骤2 发送设置\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"live-mager\" },\n        [\n          _c(\"div\", { staticClass: \"mager-box border-box\" }, [\n            _c(\"div\", { staticClass: \"from-box\" }, [\n              _c(\"div\", { staticClass: \"from-row\" }, [\n                _vm._m(0),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"from-content\" },\n                  [\n                    _c(\"com-input\", {\n                      staticClass: \"input-email\",\n                      attrs: {\n                        placeholder: \"输入标题，可结合变量使用\",\n                        \"error-tips\": _vm.errorMsg.title,\n                        value: _vm.email.title,\n                        \"max-length\": 30\n                      },\n                      on: {\n                        \"update:value\": function($event) {\n                          _vm.$set(_vm.email, \"title\", $event)\n                        }\n                      }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"from-row\" }, [\n                _vm._m(1),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"from-content\" },\n                  [\n                    _c(\"com-input\", {\n                      staticClass: \"input-email\",\n                      attrs: {\n                        placeholder: \"输入发件人名称\",\n                        \"error-tips\": _vm.errorMsg.senderName,\n                        value: _vm.email.senderName,\n                        \"max-length\": 15\n                      },\n                      on: {\n                        \"update:value\": function($event) {\n                          _vm.$set(_vm.email, \"senderName\", $event)\n                        }\n                      }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"from-row\" }, [\n                _vm._m(2),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"from-content\" },\n                  [\n                    _c(\n                      \"div\",\n                      { class: { error: _vm.errorMsg.groupIds } },\n                      [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"default-button fl\",\n                            on: { click: _vm.chooseGroup }\n                          },\n                          [_vm._v(\"选择分组\\n              \")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"send-span\" }, [\n                          _vm._v(\n                            \"发送限额：\" +\n                              _vm._s(\n                                _vm.totalCountStr ? _vm.totalCountStr : 0\n                              ) +\n                              \"/\" +\n                              _vm._s(_vm.countBalance)\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"ve-msg-tips\", {\n                          attrs: {\n                            \"tip-type\": \"html\",\n                            tip:\n                              \"1.每天最多可发送5000封邮件 <br/> 2.发送限额：当前已选中人数/剩余可发送数量<br/>3.在邮件发送前，如果分组内人员发生变化，收件人也会随之改变\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.errorMsg.groupIds\n                          ? _c(\"span\", { staticClass: \"error-msg\" }, [\n                              _vm._v(_vm._s(_vm.errorMsg.groupIds))\n                            ])\n                          : _vm._e()\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _vm.selectedGroupList.length\n                      ? _c(\n                          \"transition-group\",\n                          {\n                            staticClass: \"edit-groups\",\n                            attrs: { name: \"list\", tag: \"div\" }\n                          },\n                          _vm._l(_vm.selectedGroupList, function(person, idx) {\n                            return _c(\n                              \"span\",\n                              { key: person.id, staticClass: \"list-item\" },\n                              [\n                                _vm._v(\n                                  _vm._s(person.name) + \"\\n                \"\n                                ),\n                                _c(\"i\", {\n                                  staticClass: \"iconfont icon-shanchu\",\n                                  on: {\n                                    click: function($event) {\n                                      _vm.delGroupPerson(idx)\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          })\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.selectedTagList.length\n                      ? _c(\n                          \"transition-group\",\n                          {\n                            staticClass: \"edit-groups sec\",\n                            attrs: { name: \"list\", tag: \"div\" }\n                          },\n                          _vm._l(_vm.selectedTagList, function(tag, idx) {\n                            return _c(\n                              \"span\",\n                              { key: tag.id, staticClass: \"list-item\" },\n                              [\n                                _vm._v(_vm._s(tag.name) + \"\\n                \"),\n                                _c(\"i\", {\n                                  staticClass: \"iconfont icon-shanchu\",\n                                  on: {\n                                    click: function($event) {\n                                      _vm.delTagPerson(idx)\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          })\n                        )\n                      : _vm._e()\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"from-row\" }, [\n                _c(\"div\", { staticClass: \"from-title\" }, [\n                  _vm._v(\"发送时间：\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    class: {\n                      \"from-content\": true,\n                      error: _vm.errorMsg.planTime\n                    }\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      { staticClass: \"send-type-box\" },\n                      [\n                        _c(\n                          \"el-radio\",\n                          {\n                            attrs: { label: \"AUTO\" },\n                            model: {\n                              value: _vm.sendType,\n                              callback: function($$v) {\n                                _vm.sendType = $$v\n                              },\n                              expression: \"sendType\"\n                            }\n                          },\n                          [_vm._v(\"立即发送\\n              \")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-radio\",\n                          {\n                            attrs: { label: \"ONCE\" },\n                            model: {\n                              value: _vm.sendType,\n                              callback: function($$v) {\n                                _vm.sendType = $$v\n                              },\n                              expression: \"sendType\"\n                            }\n                          },\n                          [_vm._v(\"定时发送\\n              \")]\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _vm.sendType == \"ONCE\"\n                      ? _c(\"el-date-picker\", {\n                          attrs: {\n                            type: \"datetime\",\n                            placeholder: \"选择日期时间\",\n                            align: \"right\",\n                            format: \"yyyy-MM-dd HH:mm\",\n                            \"value-format\": \"yyyy-MM-dd HH:mm\"\n                          },\n                          model: {\n                            value: _vm.email.planTime,\n                            callback: function($$v) {\n                              _vm.$set(_vm.email, \"planTime\", $$v)\n                            },\n                            expression: \"email.planTime\"\n                          }\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.errorMsg.planTime\n                      ? _c(\"span\", { staticClass: \"error-msg\" }, [\n                          _vm._v(_vm._s(_vm.errorMsg.planTime))\n                        ])\n                      : _vm._e()\n                  ],\n                  1\n                )\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"choose-group\", {\n            attrs: {\n              webinarType: \"EMAIL\",\n              show: _vm.selectPersonShow,\n              groupList: _vm.groupList,\n              tagList: _vm.tagList,\n              checkedData: _vm.checkedData\n            },\n            on: {\n              okSelectList: _vm.okSelectList,\n              close: _vm.close,\n              searchEnter: _vm.searchEnter,\n              selectedGroupListfn: _vm.selectedGroupListfn,\n              selectedTagListfn: _vm.selectedTagListfn,\n              totalCount: _vm.totalCount\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"email-bottom\" }, [\n        _c(\n          \"button\",\n          {\n            class: {\n              \"primary-button\": true,\n              fr: true,\n              disabled: _vm.disabledBtn\n            },\n            on: { click: _vm.send }\n          },\n          [_vm._v(\"发送\\n    \")]\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"button\",\n          {\n            staticClass: \"primary-button margin-fl fr\",\n            on: { click: _vm.saveEmail }\n          },\n          [_vm._v(\"保存草稿\\n    \")]\n        )\n      ])\n    ]\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"from-title\" }, [\n      _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n      _vm._v(\"邮件标题：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"from-title\" }, [\n      _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n      _vm._v(\"发件人：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"from-title\" }, [\n      _c(\"i\", { staticClass: \"star\" }, [_vm._v(\"*\")]),\n      _vm._v(\"收件人：\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/_babel-loader@7.1.5@babel-loader/lib/index.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./edit-step-two.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_babel-loader@7.1.5@babel-loader/lib/index.js!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./edit-step-two.vue?vue&type=script&lang=js&\"","<template>\r\n  <div class=\"edit-step-box\" @keydown=\"canPass = false\">\r\n    <header class=\"email-header\">\r\n      <div class=\"back-btn\"\r\n           @click=\"goBack\">\r\n        <i class=\"iconfont icon-jiantou\"></i>\r\n      </div>\r\n      <span>步骤2 发送设置</span>\r\n    </header>\r\n    <div class=\"live-mager\">\r\n      <div class=\"mager-box border-box\">\r\n        <div class=\"from-box\">\r\n          <div class=\"from-row\">\r\n            <div class=\"from-title\"><i class=\"star\">*</i>邮件标题：</div>\r\n            <div class=\"from-content\">\r\n              <com-input placeholder=\"输入标题，可结合变量使用\"\r\n                         class=\"input-email\"\r\n                         :error-tips=\"errorMsg.title\"\r\n                         :value.sync=\"email.title\"\r\n                         :max-length=\"30\"></com-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"from-row\">\r\n            <div class=\"from-title\"><i class=\"star\">*</i>发件人：</div>\r\n            <div class=\"from-content\">\r\n              <com-input placeholder=\"输入发件人名称\"\r\n                         class=\"input-email\"\r\n                         :error-tips=\"errorMsg.senderName\"\r\n                         :value.sync=\"email.senderName\"\r\n                         :max-length=\"15\"></com-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"from-row\">\r\n            <div class=\"from-title\"><i class=\"star\">*</i>收件人：</div>\r\n            <div class=\"from-content\">\r\n              <div :class=\"{error:errorMsg.groupIds}\">\r\n                <button class=\"default-button fl\"\r\n                        @click=\"chooseGroup\">选择分组\r\n                </button>\r\n                <span class=\"send-span\">发送限额：{{totalCountStr ? totalCountStr : 0}}/{{countBalance}}</span>\r\n                <ve-msg-tips tip-type=\"html\"\r\n                             tip=\"1.每天最多可发送5000封邮件 <br/> 2.发送限额：当前已选中人数/剩余可发送数量<br/>3.在邮件发送前，如果分组内人员发生变化，收件人也会随之改变\"></ve-msg-tips>\r\n                <span class=\"error-msg\"\r\n                      v-if=\"errorMsg.groupIds\">{{errorMsg.groupIds}}</span>\r\n              </div>\r\n              <!-- 分组 -->\r\n              <transition-group name=\"list\"\r\n                                class=\"edit-groups\"\r\n                                tag=\"div\"\r\n                                v-if=\"selectedGroupList.length\">\r\n                <span class=\"list-item\"\r\n                      v-for=\"(person,idx) in selectedGroupList\"\r\n                      :key=\"person.id\">{{person.name}}\r\n                  <i class=\"iconfont icon-shanchu\"\r\n                     @click=\"delGroupPerson(idx)\"></i>\r\n                </span>\r\n              </transition-group>\r\n              <!-- 标签 -->\r\n              <transition-group name=\"list\"\r\n                                class=\"edit-groups sec\"\r\n                                tag=\"div\"\r\n                                v-if=\"selectedTagList.length\">\r\n                <span class=\"list-item\"\r\n                      v-for=\"(tag,idx) in selectedTagList\"\r\n                      :key=\"tag.id\">{{tag.name}}\r\n                  <i class=\"iconfont icon-shanchu\"\r\n                     @click=\"delTagPerson(idx)\"></i>\r\n                </span>\r\n              </transition-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"from-row\">\r\n            <div class=\"from-title\">发送时间：</div>\r\n            <div :class=\"{'from-content':true,error:errorMsg.planTime}\">\r\n              <div class=\"send-type-box\">\r\n                <el-radio v-model=\"sendType\"\r\n                          label=\"AUTO\">立即发送\r\n                </el-radio>\r\n                <el-radio v-model=\"sendType\"\r\n                          label=\"ONCE\">定时发送\r\n                </el-radio>\r\n              </div>\r\n              <el-date-picker v-if=\"sendType=='ONCE'\"\r\n                              v-model=\"email.planTime\"\r\n                              type=\"datetime\"\r\n                              placeholder=\"选择日期时间\"\r\n                              align=\"right\"\r\n                              format=\"yyyy-MM-dd HH:mm\"\r\n                              value-format=\"yyyy-MM-dd HH:mm\">\r\n              </el-date-picker>\r\n              <span class=\"error-msg\"\r\n                    v-if=\"errorMsg.planTime\">{{errorMsg.planTime}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 选择收件人 -->\r\n      <choose-group :webinarType=\"'EMAIL'\" :show=\"selectPersonShow\" :groupList=\"groupList\" :tagList='tagList'\r\n                    :checkedData=\"checkedData\" @okSelectList=\"okSelectList\" @close=\"close\" @searchEnter=\"searchEnter\"\r\n                    @selectedGroupListfn=\"selectedGroupListfn\" @selectedTagListfn=\"selectedTagListfn\"\r\n                    @totalCount=\"totalCount\"></choose-group>\r\n    </div>\r\n    <div class=\"email-bottom\">\r\n      <button :class=\"{'primary-button':true, fr:true,disabled:disabledBtn}\"\r\n              @click=\"send\">发送\r\n      </button>\r\n      <button class=\"primary-button margin-fl fr\"\r\n              @click=\"saveEmail\">保存草稿\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import userManage from 'src/api/userManage-service'\r\n  // import noticeService from 'src/api/notice-service'\r\n  import VeMsgTips from 'src/components/ve-msg-tips'\r\n  import chooseGroup from '../promote/com-chooseGroup'\r\n  import activityService from 'src/api/activity-service'\r\n  import { mapState, mapMutations } from 'vuex'\r\n  import * as types from '../../../store/mutation-types'\r\n\r\n  export default {\r\n    name: 'edit-step-two',\r\n    components: { VeMsgTips, chooseGroup },\r\n    data () {\r\n      return {\r\n        outValue: '',\r\n        isTimer: true,\r\n        selectPersonShow: false,\r\n        sendType: 'AUTO',\r\n        searchPerson: '',\r\n        personList: [],\r\n        selectedPersonList: [],\r\n        selectedPersonListStr: '',\r\n        selectedCount: 0,\r\n        disabledBtn: false,\r\n        canPass: true,\r\n        errorMsg: {\r\n          title: '',\r\n          content: '',\r\n          desc: '',\r\n          senderName: '',\r\n          planTime: '',\r\n          groupIds: ''\r\n        },\r\n        email: {\r\n          activityId: '',\r\n          emailInviteId: '',\r\n          emailTemplateId: 1,\r\n          title: '',\r\n          content: '',\r\n          senderName: '',\r\n          planTime: '',\r\n          groupIds: '',\r\n          tagIdStr: ''\r\n        },\r\n        PC_HOST: location.protocol + process.env.PC_HOST,\r\n        groupList: [],\r\n        tagList: [],\r\n        checkedData: [],\r\n        selectedGroupList: [],\r\n        selectedTagList: [],\r\n        selectedGroupListStr: '',\r\n        selectedTagListStr: '',\r\n        groupIdStr: '',\r\n        tagIdStr: '',\r\n        totalCountStr: '',\r\n        countBalance: 0,\r\n        clicked: false\r\n      }\r\n    },\r\n    computed: mapState('liveMager', {\r\n      emailInfo: state => state.emailInfo\r\n    }),\r\n    watch: {\r\n      emailInfo: {\r\n        handler (newVal) {\r\n          this.email = { ...this.email, ...newVal }\r\n          this.sendType = this.email.planTime ? 'ONCE' : 'AUTO'\r\n        },\r\n        immediate: true\r\n      },\r\n      email: {\r\n        handler () {\r\n          this.clearError()\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created () {\r\n      const emailId = this.$route.query.email\r\n      if (!this.email.content) {\r\n        if (!emailId) {\r\n          this.$router.go(-1)\r\n          return\r\n        } else {\r\n          this.queryEmailInfo(emailId)\r\n        }\r\n      } else {\r\n        this.totalCountStr = this.emailInfo.expectNum\r\n      }\r\n      this.email.activityId = this.$route.params.id\r\n      this.getLimit()\r\n      this.initData()\r\n      // this.queryTagList()\r\n      // this.$nextTick((res) => {\r\n      //   this.queryGroupList()\r\n      // })\r\n      // this.$nextTick((res) => {\r\n      //   this.reArrangeList(this.emailInfo.groupIds ? this.emailInfo.groupIds.split(',') : [], this.emailInfo.tagIds ? this.emailInfo.tagIds.split(',') : [])\r\n      // })\r\n    },\r\n    methods: {\r\n      ...mapMutations('liveMager', {\r\n        storeEmailInfo: types.EMAIL_INFO\r\n      }),\r\n      async initData () {\r\n        await this.queryTagList()\r\n        await this.queryGroupList()\r\n        await this.reArrangeList(this.emailInfo.groupIds ? this.emailInfo.groupIds.split(',') : [], this.emailInfo.tagIds ? this.emailInfo.tagIds.split(',') : [])\r\n      },\r\n      chooseGroup () {\r\n        this.selectPersonShow = true\r\n        this.clicked = true\r\n      },\r\n      /* 清除错误信息 */\r\n      clearError () {\r\n        if (this.email.planTime) {\r\n          this.errorMsg.planTime = ''\r\n        } else {\r\n          return\r\n        }\r\n        if (this.email.title) {\r\n          this.errorMsg.title = ''\r\n        } else {\r\n          return\r\n        }\r\n        if (this.email.senderName) {\r\n          this.errorMsg.senderName = ''\r\n        } else {\r\n          return\r\n        }\r\n        if (this.email.groupIds) {\r\n          this.errorMsg.groupIds = ''\r\n        } else {\r\n          return\r\n        }\r\n        if (this.email.desc) {\r\n          this.errorMsg.desc = ''\r\n        } else {\r\n          return\r\n        }\r\n        if (this.email.content) {\r\n          this.errorMsg.content = ''\r\n        }\r\n      },\r\n      /* 查询邮件详情 */\r\n      queryEmailInfo (emailId) {\r\n        // 如果不是编辑页面就return\r\n        if (!emailId) return\r\n        this.$get(activityService.GET_EMAIL_INFO, {\r\n          emailInviteId: emailId\r\n        }).then((res) => {\r\n          this.email = res.data\r\n          this.storeEmailInfo(this.email)\r\n          this.totalCountStr = this.emailInfo.expectNum\r\n        })\r\n      },\r\n      /* enter搜索 */\r\n      // searchEnter () {\r\n      //   this.queryPersonList()\r\n      // },\r\n      /* 点击确定 */\r\n      okSelectList () {\r\n        this.selectPersonShow = false\r\n        this.email.change = 1\r\n        if (this.email.groupIds) {\r\n          this.errorMsg.groupIds = ''\r\n        }\r\n      },\r\n      /* 点击取消 */\r\n      handleSelectPerson (e) {\r\n        if (e.action === 'cancel') {\r\n          this.selectPersonShow = false\r\n        }\r\n      },\r\n      saveEmail () {\r\n        if (this.totalCountStr > this.countBalance) {\r\n          this.$toast({\r\n            content: '收件人数量超出限额',\r\n            position: 'center'\r\n          })\r\n          return false\r\n        }\r\n        this.canPass = true\r\n        this.email.content = this.email.content.replace('$$activity$$', `${this.PC_HOST}watch/${this.email.activityId}`)\r\n        this.$post(activityService.POST_SAVE_EMAIL_INFO, this.email).then((res) => {\r\n          this.email = { ...this.email, ...res.data }\r\n          this.storeEmailInfo(this.email)\r\n          this.$router.replace(`/liveMager/emailEditTwo/${this.email.activityId}?email=${this.email.emailInviteId}`)\r\n          this.$toast({\r\n            content: '保存草稿成功',\r\n            position: 'center'\r\n          })\r\n        })\r\n      },\r\n      sendEmail () {\r\n        this.canPass = true\r\n        if (this.isTimer && !this.email.planTime) {\r\n          this.errorMsg.planTime = '定时时间不能为空'\r\n          this.disabledBtn = false\r\n          return\r\n        }\r\n        if (!this.checkParams(this.isTimer)) {\r\n          this.disabledBtn = false\r\n          return\r\n        }\r\n        this.email.content = this.email.content.replace('$$activity$$', `${this.PC_HOST}watch/${this.email.activityId}`)\r\n        if (this.isTimer) { // 发送定时邮件\r\n          this.$post(activityService.POST_SEND_TIMER_EMAIL_INFO, this.email).then((res) => {\r\n            this.$router.push(`/liveMager/email/${this.email.activityId}`)\r\n            this.disabledBtn = false\r\n          })\r\n        } else { // 保存并发送\r\n          this.$post(activityService.POST_SAVE_SEND_EMAIL, this.email).then((res) => {\r\n            this.$router.push(`/liveMager/email/${this.email.activityId}`)\r\n            this.disabledBtn = false\r\n          })\r\n        }\r\n      },\r\n      send () {\r\n        if (this.totalCountStr > this.countBalance) {\r\n          this.$toast({\r\n            content: '收件人数量超出限额',\r\n            position: 'center'\r\n          })\r\n          return false\r\n        }\r\n        this.canPass = true\r\n        this.disabledBtn = true\r\n        this.$nextTick(() => {\r\n          if (this.sendType === 'AUTO') {\r\n            this.isTimer = false\r\n            this.immediatelySend()\r\n          } else if (this.sendType === 'ONCE') {\r\n            this.isTimer = true\r\n            this.sendEmail()\r\n          }\r\n        })\r\n      },\r\n      immediatelySend () {\r\n        this.email.planTime = ''\r\n        this.isTimer = false\r\n        this.sendEmail()\r\n      },\r\n      checkParams () {\r\n        this.errorMsg = {\r\n          title: '',\r\n          content: '',\r\n          senderName: '',\r\n          planTime: ''\r\n        }\r\n        if (!this.email.title) {\r\n          this.errorMsg.title = '标题不能为空'\r\n          return false\r\n        } else if (!this.email.senderName) {\r\n          this.errorMsg.senderName = '发件人不能为空'\r\n          return false\r\n        } else if (!this.email.groupIds) {\r\n          this.errorMsg.groupIds = '请选择收件人'\r\n          return false\r\n        }\r\n        return true\r\n      },\r\n      goBack () {\r\n        this.storeEmailInfo(this.email)\r\n        this.$router.go(-1)\r\n      },\r\n      /* enter搜索 */\r\n      searchEnter (key, flag) {\r\n        if (flag === 'group') {\r\n          this.queryGroupList(key)\r\n        } else {\r\n          this.queryTagList(key)\r\n        }\r\n      },\r\n      /* 点击取消 */\r\n      close () {\r\n        this.selectPersonShow = false\r\n      },\r\n      /* 删除分组 */\r\n      delGroupPerson (idx) {\r\n        const delIdx = this.groupList.indexOf(this.selectedGroupList[idx])\r\n        this.groupList[delIdx].isChecked = false\r\n      },\r\n      // 标签\r\n      delTagPerson (idx) {\r\n        const delIdx = this.tagList.indexOf(this.selectedTagList[idx])\r\n        this.tagList[delIdx].isChecked = false\r\n      },\r\n      // 查询群组\r\n      queryGroupList (keyword) {\r\n        return this.$get(userManage.GET_GROUP_LIST, {\r\n          keyword: keyword,\r\n          not_empty_field: 'email'\r\n        }).then((res) => {\r\n          let temArray = []\r\n          res.data.list.forEach((item) => {\r\n            temArray.push({\r\n              id: item.group_id,\r\n              name: item.title,\r\n              count: item.user_count,\r\n              isChecked: false\r\n            })\r\n          })\r\n          this.groupList = temArray\r\n          this.email.groupList = this.groupList\r\n        })\r\n      },\r\n      /* 查询标签 */\r\n      queryTagList (key) {\r\n        return this.$get(userManage.GET_TAG_LIST, {\r\n          keyword: key\r\n        }).then((res) => {\r\n          let temArray = []\r\n          res.data.list.forEach(item => {\r\n            temArray.push({\r\n              name: item.tag_name,\r\n              id: item.tag_id,\r\n              count: item.user_count,\r\n              isChecked: false\r\n            })\r\n          })\r\n          this.tagList = temArray\r\n          this.email.tagList = this.tagList\r\n        })\r\n      },\r\n      selectedGroupListfn (arr, str, idStr) {\r\n        this.selectedGroupListStr = str.substring(0, str.length - 1)\r\n        this.selectedGroupList = arr\r\n        this.email.groupIds = idStr // 分组id\r\n      },\r\n      selectedTagListfn (arr, str, idStr) {\r\n        this.selectedTagListStr = str.substring(0, str.length - 1)\r\n        this.selectedTagList = arr\r\n        this.email.tagIds = idStr // 标签id\r\n      },\r\n      totalCount (res) {\r\n        if (this.clicked) {\r\n          this.totalCountStr = res\r\n        }\r\n      },\r\n      reArrangeList (group, tag) {\r\n        this.groupList.forEach((item, idx) => {\r\n          group.forEach((ele, i) => {\r\n            if (ele * 1 === item.id) {\r\n              this.groupList[idx].isChecked = true\r\n              this.selectedGroupList.push({\r\n                count: item.count,\r\n                id: item.id,\r\n                isChecked: true,\r\n                name: item.name\r\n              })\r\n            }\r\n          })\r\n        })\r\n        this.email.selectedGroupList = this.selectedGroupList\r\n        this.tagList.forEach((item, idx) => {\r\n          tag.forEach((ele, i) => {\r\n            if (ele * 1 === item.id) {\r\n              this.tagList[idx].isChecked = true\r\n              this.selectedTagList.push({\r\n                count: item.count,\r\n                id: item.id,\r\n                isChecked: true,\r\n                name: item.name\r\n              })\r\n            }\r\n          })\r\n        })\r\n        this.email.selectedTagList = this.selectedTagList\r\n      },\r\n      // 获取限额\r\n      getLimit () {\r\n        this.$get(activityService.GET_SEND_LIMIT, {\r\n          activityId: this.email.activityId,\r\n          type: 'EMAIL'\r\n        }).then((res) => {\r\n          console.log(res)\r\n          this.countBalance = res.data.balance\r\n        })\r\n      }\r\n    },\r\n    /* 路由守卫，离开当前页面之前被调用 */\r\n    beforeRouteLeave (to, from, next) {\r\n      if (this.canPass) {\r\n        next(true)\r\n        return false\r\n      }\r\n      this.$messageBox({\r\n        header: '提示',\r\n        width: '400px',\r\n        content: '是否放弃当前编辑？',\r\n        cancelText: '否',\r\n        confirmText: '是',\r\n        handleClick: (e) => {\r\n          if (e.action === 'confirm') {\r\n            next(true)\r\n          } else {\r\n            next(false)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\" scoped src=\"../css/live.scss\"></style>\r\n<style lang=\"scss\" scoped>\r\n.edit-step-box {\r\n  background-color: #f5f5f5;\r\n  .send-span {\r\n    display: inline-block;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    margin: 0 15px;\r\n    color: #888;\r\n  }\r\n  .email-header {\r\n    height: 60px;\r\n    line-height: 60px;\r\n    background-color: #ffd021;\r\n    .icon-jiantou {\r\n      font-size: 22px;\r\n      vertical-align: -2px;\r\n    }\r\n    .back-btn {\r\n      display: inline-block;\r\n      padding: 0 15px;\r\n      background-color: #ffda51;\r\n      line-height: 40px;\r\n      border-radius: 4px;\r\n      font-size: 18px;\r\n      text-align: center;\r\n      margin-left: 20px;\r\n      margin-right: 10px;\r\n      &:hover {\r\n        cursor: pointer;\r\n        opacity: 0.9;\r\n        color: #4b5afe;\r\n      }\r\n    }\r\n  }\r\n  .live-mager {\r\n    padding-bottom: 0;\r\n    height: calc(100vh - 120px);\r\n    overflow: hidden;\r\n    .border-box {\r\n      margin-top: 50px;\r\n      height: 2000px;\r\n    }\r\n  }\r\n  .email-bottom {\r\n    height: 60px;\r\n    width: 100%;\r\n    line-height: 60px;\r\n    border-top: 1px solid #e2e2e2;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.1);\r\n    padding: 0 20px;\r\n    background-color: #fff;\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n    .margin-fl {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  .send-type-box {\r\n    height: 30px;\r\n    margin-top: 13px;\r\n  }\r\n  .msg-box {\r\n    z-index: 1000;\r\n  }\r\n  .step-btns {\r\n    margin: 30px 30px 100px 30px;\r\n    .margin-fl {\r\n      margin: 0 20px;\r\n    }\r\n  }\r\n  .input-email {\r\n    width: 400px;\r\n  }\r\n  .msg-box-bottom {\r\n    height: 40px;\r\n    .email-timer {\r\n      display: inline-block;\r\n      margin-right: 23px;\r\n    }\r\n    .error-msg {\r\n      display: block;\r\n      position: absolute;\r\n      color: #fc5659;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  .from-title {\r\n    line-height: 40px;\r\n  }\r\n  .edit-groups {\r\n    margin-top: 15px;\r\n    width: 500px;\r\n    &.sec {\r\n      margin-top: 0px;\r\n    }\r\n    span {\r\n      display: inline-block;\r\n      background-color: #f0f1fe;\r\n      border-radius: 17px;\r\n      padding: 8px 10px;\r\n      margin-right: 10px;\r\n      margin-bottom: 10px;\r\n      i {\r\n        color: #4b5afe;\r\n        &:hover {\r\n          cursor: pointer;\r\n          opacity: 0.8;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render, staticRenderFns } from \"./edit-step-two.vue?vue&type=template&id=c4130fe2&scoped=true&\"\nimport script from \"./edit-step-two.vue?vue&type=script&lang=js&\"\nexport * from \"./edit-step-two.vue?vue&type=script&lang=js&\"\nimport style0 from \"../css/live.scss?vue&type=style&index=0&id=c4130fe2&lang=scss&scoped=true&\"\nimport style1 from \"./edit-step-two.vue?vue&type=style&index=1&id=c4130fe2&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c4130fe2\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\project\\\\fe_management\\\\node_modules\\\\_vue-hot-reload-api@2.3.1@vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('c4130fe2', component.options)\n    } else {\n      api.reload('c4130fe2', component.options)\n    }\n    module.hot.accept(\"./edit-step-two.vue?vue&type=template&id=c4130fe2&scoped=true&\", function () {\n      api.rerender('c4130fe2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/pages/live-mager/email/edit-step-two.vue\"\nexport default component.exports"],"sourceRoot":""}